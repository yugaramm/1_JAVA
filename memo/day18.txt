파일 입출력(JAVA Application 관점)
	Stream 이라는 연결통로를 통해 원본 데이터가 알맞는 인코딩 방식으로 전송된다.
	byte단위로 입출력되기 때문에 개별처리이며, 상세 연산이 필요하지 않다면,
	Buffer를 사용한 입출력을 권장한다. Buffer를 사용하면 일괄처리가 가능해진다.

	※ 인코딩 방식
		인코딩 방식은 완성형과 조합형이 있다.
		- 완성형 : 각, 간, 류, 호, 근, ...
		- 조합형 : ㄱ + ㅏ + ㄱ
		조합형이 효율적이다.
		전 세계에서 가장 많이 사용되는 방식은 UTF-8 이다.

Writer(출력)
	BufferedWriter : 버퍼를 사용한 출력 클래스
	FileWriter : 전달한 경로의 출력하기 위한 목적으로 열어준다.
		     전달한 경로에 파일이 없다면 새롭게 만든 후 열어준다.

Reader(입력)
	BufferedReader : 버퍼를 사용한 입력 클래스
	FileReader : 전달한 경로의 입력하기 위한 목적으로 열어준다.
		     전달한 경로에 파일이 없다면 예외가 발생한다.(FileNotFoundException)

File(파일 객체)
	전달한 경로에 있는 파일의 정보를 담는 타입.

경로
	절대 경로 : 어느 경로에서 찾아 들어가던지 간에 한 번에 갈 수 있는 경로, C:/a/b
	상대 경로 : 현재 경로부터 시작해서 경로를 찾아가는 방법 ../../../../web/images/1.jpg

스트림(Stream)
-배열, 컬렉션 같은 데이터 묶음을 편하고 효율적으로 처리하기 위해 제공되는 API
-선언형 프로그래밍을 자바로 구현해놓은 클래스
-원본 데이터를 수정하지 않는다.
-일회용

선언형? 명령형? 프로그래밍이랑
	명령형 : 어떻게 할 것인가? // 알고리즘 중점
	선언형 : 무엇을 할 것인가? // 목표 중점

스트림의 종류
	- 기본 타입 Stream
		IntStream, DoubleStream, LongStream ...
	- 객체 타입 Stream
		Stream<T> : T타입의 데이터를 처리하는 스트림

스트림의 3단계
1. 생성
2. 중간 연산
3. 최종 연산