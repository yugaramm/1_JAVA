문자열 형변환
	자동 형변환
		"유가람" + 10 = "유가람10" --> 연결

	다른 자료형을 문자열로 변환할 때에는 문자열과의 연산 결과를 이용해서 간편하게 문자열로 변환할 수 있다.

	※문자열을 다른 자료형으로
		앞서 배웠던 강제형변환처럼 앞에 명시만 해주면 되는 형식은 일반 자료형들 끼리만 가능하다.
		문자열 타입은 클래스 타입이기에 일반 자료형의 클래스 타입의 도움을 받아야한다.

		Integer.parseInt("123"); -> 문자열에서 변환된 정수 (123)
		Double.parseDouble("3.14"); -> 문자열에서 변환된 실수 (3.14)

자료형들의 초기값 : 어떤 값을 넣을 지 아직 모를 때 넣는 값
	int	: 0
	double	: 0.0
	char	: ' '(공백문자)
	문자열	: null 또는 ""

입력
	입력 받기를 대기하면서 콘솔창에 커서가 깜빡인다.

입력 클래스
	Scanner sc = new Scanenr(System.in);
	String name = "유가람";

입력 메소드 (콘솔창에서 입력을 구현하기 위해 사용)
	next() : 사용자가 입력한 문자열 값
		- 사용자가 입력한 값 중 공백 또는 줄바꿈 문자를 구분점으로 각 문자열을 분리한다.

	nextLine() : 사용자가 입력한 문자열 값
		- 공백도 값으로 취급하기 때문에 그대로 입력 받는다.

연산자
	기능이 있는 특수문자

연산자 우선순위 (최단산쉬관리삼대)
	최우선 연산자	()
	단항 연산자	(double)3 
	산술 연산자	+, -, *, /
	쉬프트 연산자	<<, >>
	관계 연산자	>, <, <=, >=, ==, !=
	논리 연산자	&&, ||
	삼항 연산자	조건식 ? 참일 때 값 : 거짓일 때 값
	대입 연산자	=, +=, -=, ...

결합성
	하나의 수식에 동일한 연산자가 여러 개 사용되면 알맞은 방향으로 결합되어 연산되는 성질( 왼쪽 -> 오른쪽으로 )

제어문
	조건문
	반복문

조건식
	결과가 참 또는 거짓, 둘 중 하나가 나오는 식

	관계 연산자(비교 연산자)
		== : 같니? 응! true;
		!= : 다르니? 응! true;

	논리 연산자
		&& (논리곱), A && B, 두 조건식 모두 참이면 참
		|| (논리합), A || B, 둘 중 하나라도 참이면 참

	단항 연산자
		!(NOT), !A, 조건식이 참이면 거짓으로, 거짓이면 참으로 변경

삼항 연산자
	조건식 ? 참일 때 값 : 거짓일 때 값

	기본적으로 참일 때 값과 거짓일 때 값 자리에 오는 값은 자료형이 달라도 된다.
	하지만, 연산의 결과를 변수에 담아서 사용하는 경우가 많기 때문에, 자료형을 맞춰주는 게 일반적이다.
























